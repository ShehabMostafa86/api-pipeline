{
	"info": {
		"_postman_id": "a9d0e6a9-40fa-4320-878b-883314b9a103",
		"name": "Testing-summaryReport-All-Employees",
		"description": "# <u><i>To Be Updated !!</i></u>\n\n## Documentation for used collection and data file\n\n# Collection\n\nThis collection is for single-shift test cases which are included in this [<b>sheet</b>](https://docs.google.com/spreadsheets/d/1IEwWfIIY2fx70rCU50k8Vftt5AlELAm2q2rf7WqQe8c/edit?gid=1203718845#gid=1203718845) and they are:\n\n- TC-00001\n    \n- TC-00002\n    \n- TC-00005\n    \n- TC-00006\n    \n- TC-00007\n    \n- TC-00008\n    \n- TC-00009\n    \n- TC-00010\n    \n- TC-00011\n    \n- TC-00016\n    \n- TC-00017\n    \n- TC-00018\n    \n- TC-00019\n    \n- TC-00020\n    \n- TC-00021\n    \n- TC-00022\n    \n- TC-00023\n    \n- TC-00024\n    \n- TC-00025\n    \n\nColletion include the following requests:  \n<u>Login Web Account Admin &amp; Verification code</u>\n\nBoth requests are responsible for login and authenticate user\n\n<u>Edit checkIn &amp; Edit checkout</u>\n\nBoth requests are responsible for use checkin & checkout\n\n<u>Summary-Report<br></u>Responsible for generating report\n\nAnd all test-scripts are included in this request\n\n# Data file\n\n\"intervalSingleShiftSummaryReport.csv\"\n\nFile include 25 rows each row represent a test case with it's validations.\n\nFile is used to provide data to collection variables.\n\n### <u>File structure</u>\n\n| **column name** | **reflected value in data file** | **reflected value in data base** |\n| --- | --- | --- |\n| skipCheckout | Flag used to skip request in specific test cases | None |\n| TCsId | Test case number which is match the test case number in the used sheet | None |\n| userId | User that will be used when run test case | UserId |\n| SessionCheckInId | Session id generated when user create a checkin action | sessionId |\n| TransactionCheckinID | Transaction id generated when user create a checkin action | transactionId |\n| SessionCheckOutId | Session id generated when user create a checkout action | sessionId |\n| TransactionCheckOutID | Transaction id generated when user create a checkout action | transactionId |\n| CheckIn | Date and time for checkin which is provided by user | createDate |\n| CheckOut | Date and time for checkout which is provided by user | createDate |\n| ReportFrom | Start date for generated reportat | FromDate |\n| ReportTo | End date for generated reportat | ToDate |\n| SessionTotalActualHoursWork | ساعات الدوام الفعلي | SessionTotalActualHoursWork |\n| SessionTotalShortesHours | النقص في الدوام | SessionTotalShortesHours |\n| SessionTotalCheckInExtraHours | حضور مبكر | SessionTotalCheckInExtraHours |\n| SessionTotalCheckInLateHours | حضور متأخر | SessionTotalCheckInLateHours |\n| SessionTotalCheckOutLateHours | إنصراف مبكر | SessionTotalCheckOutLateHours |\n| SessionTotalOverTimeHours | العمل الإضافي | SessionTotalOverTimeHours |\n| SessionTotalLeaveHours | المغادرات | SessionTotalLeaveHours |\n| OutNextDay | Boolean flag used check if this shift extend to next day or not | OutNextDay |\n| Status | حالة التحضير | Status |\n| TypeDesc | Status description if exist (in case there is \"more\" link displayed) | TypeDesc |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41276037"
	},
	"item": [
		{
			"name": "Login Web Account Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "requstid",
						"value": "2:857457095729380",
						"type": "text"
					},
					{
						"key": "Servicekey",
						"value": "aa55a21aae70be27b84cdef2413f519c",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"PageNumber\": 0,\r\n  \"PageSize\": 0,\r\n  \"Language\": 0,\r\n  \"Data\": {\r\n      \"UserName\": \"m.monged@t2.sa\",\r\n      \"Password\":\"wb\\\\42o_`M\",\r\n      \"AccountID\":\"993a9ad3-cacc-4ddc-9978-553f66570714\",\r\n      \"ReCaptchaToken\":\"\"\r\n      }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/User/Login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"User",
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verification code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"token\", jsonData.Data.AccessToken )"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "accept-language",
						"value": "en-GB,en;q=0.9,ar-EG;q=0.8,ar;q=0.7,en-US;q=0.6"
					},
					{
						"key": "authorization",
						"value": "Bearer null"
					},
					{
						"key": "clientkey",
						"value": "Availo"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "language",
						"value": "0"
					},
					{
						"key": "origin",
						"value": "https://availo-testingnewui.t2.sa"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://availo-testingnewui.t2.sa/"
					},
					{
						"key": "requestversion",
						"value": "v 4.9.5"
					},
					{
						"key": "requstid",
						"value": "1:143473796329390"
					},
					{
						"key": "requsttoken",
						"value": ""
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Chromium\";v=\"124\", \"Google Chrome\";v=\"124\", \"Not-A.Brand\";v=\"99\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Windows\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "servicekey",
						"value": "aa55a21aae70be27b84cdef2413f519c"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Data\": {\n    \"UserName\": \"m.monged@t2.sa\",\n    \"Password\": \"wb\\\\42o_`M\",\n    \"AccountID\": \"993a9ad3-cacc-4ddc-9978-553f66570714\",\n    \"PhoneNumber\": \"201273528426\",\n    \"VerificationCode\": \"1234\"\n  },\n  \"UserID\": \"\",\n  \"PageNumber\": 0,\n  \"PageSize\": 0,\n  \"Language\": 1,\n  \"TimeZoneOffset\": -180\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/User/VerifyCode",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"User",
						"VerifyCode"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-Active-users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var totalCount = pm.collectionVariables.set(\"totalCount\",jsonData.Data.TotalCount);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "accept-language",
						"value": "en-GB,en;q=0.9,ar-EG;q=0.8,ar;q=0.7,en-US;q=0.6"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIwMWMyOWJjYi04MDRhLTRhNmMtOTZmYi0zMDJmOTE1YjViYmIiLCJ1bmlxdWVfbmFtZSI6IjAxYzI5YmNiLTgwNGEtNGE2Yy05NmZiLTMwMmY5MTViNWJiYiIsIlVzZXJJZCI6IjAxYzI5YmNiLTgwNGEtNGE2Yy05NmZiLTMwMmY5MTViNWJiYiIsIlVzZXJTdGF0ZXNJRCI6IjEiLCJBY2NvdW50SWQiOiI5OTNhOWFkMy1jYWNjLTRkZGMtOTk3OC01NTNmNjY1NzA3MTQiLCJVc2VybmFtZSI6Im0ubW9uZ2VkQHQyLnNhIiwiVXNlckFjY291bnRJZCI6Ijk5M2E5YWQzLWNhY2MtNGRkYy05OTc4LTU1M2Y2NjU3MDcxNCIsIlBhc3N3b3JkIjoid2JcXDQyb19gTSIsIm5iZiI6MTczNTUwNjIwMywiZXhwIjoxNzM1NTI3ODAzLCJpYXQiOjE3MzU1MDYyMDN9.swCqmzpj4PAqeqZdqTVnfXUo5gFZE6iDMS0_4w67S74"
					},
					{
						"key": "clientkey",
						"value": "Availo"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "language",
						"value": "0"
					},
					{
						"key": "origin",
						"value": "https://availo-testingnewui.t2.sa"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://availo-testingnewui.t2.sa/"
					},
					{
						"key": "requestversion",
						"value": "v 4.9.5"
					},
					{
						"key": "requstid",
						"value": ":71446036218329751"
					},
					{
						"key": "requsttoken",
						"value": ""
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Windows\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "servicekey",
						"value": "aa55a21aae70be27b84cdef2413f519c"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
					},
					{
						"key": "userid",
						"value": "01c29bcb-804a-4a6c-96fb-302f915b5bbb"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Data\": {\n    \"statusId\": 1,\n    \"RoleId\": \"0\",\n    \"DepartementIds\": {{DepartmentID}},\n    \"EmployeeType\": \"\"\n  },\n  \"UserID\": \"\",\n  \"PageNumber\": 1,\n  \"PageSize\": 30,\n  \"Language\": 1,\n  \"TimeZoneOffset\": -120\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/User/GetAllUser",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"User",
						"GetAllUser"
					]
				}
			},
			"response": []
		},
		{
			"name": "Work-SUmmary-Report",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"var collectionName = \"Testing-summaryReport-All-Employees\"\r",
							"var folderName = \"Testing intervals\"\r",
							"var TestCaseId = pm.iterationData.get(\"TCsId\")\r",
							"var TCdate = pm.iterationData.get(\"SpecificDate\")\r",
							"\r",
							"\r",
							"// Extract the list of employees and the overall TotalCount\r",
							"const employees = jsonData.Data.List;\r",
							"// Find the employee with specific ID\r",
							"const specificEmployee = employees.find(emp => emp.JobNumber === pm.iterationData.get(\"JobNumber\"));\r",
							"// Extract the list of transactions for this employee\r",
							"const workTransactions = specificEmployee.WorkReportTransactions.List;\r",
							"// Define the specific date\r",
							"const specificDate = pm.iterationData.get(\"SpecificDate\");\r",
							"// Define the specific Status\r",
							"const expectedStatusOnSpecificDate = pm.iterationData.get(\"Status\"); \r",
							"// Define the specific working hours\r",
							"const expectedSessionTotalActualHoursWork = pm.iterationData.get(\"SessionTotalActualHoursWork\");\r",
							"\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate TotalCount of days for each employee\", function () {\r",
							"    employees.forEach((employee) => {\r",
							"        const daysCount = employee.WorkReportTransactions.TotalCount;\r",
							"        const totalDaysCount = pm.iterationData.get(\"NumbersOfDays\");\r",
							"        // Check that TotalCount matches the number of days in the list\r",
							"        pm.expect(daysCount).to.eql(totalDaysCount);\r",
							"    });\r",
							"}); \r",
							"\r",
							"//حالة التحضير\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate statuses for employee with specific ID is correct\", function () {\r",
							"    workTransactions.forEach(transaction => {\r",
							"        if (transaction.SelectedDate === specificDate) {\r",
							"            // Validate that the status on the specific date is \"Present\"\r",
							"            const actualStatusOnSpecificDate = transaction.Status\r",
							"            pm.expect(actualStatusOnSpecificDate,`Expected statuses for employee to be ${expectedStatusOnSpecificDate}, but got ${actualStatusOnSpecificDate}`).to.eql(expectedStatusOnSpecificDate);\r",
							"        }\r",
							"    });\r",
							"});\r",
							"\r",
							"//ساعات الدوام الفعلي\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate working hours for employee with specific ID is correct\", function () {\r",
							"    const expectedSessionTotalActualHoursWork = pm.iterationData.get(\"SessionTotalActualHoursWork\");\r",
							"    const SessionTotalActualHoursWork = workTransactions.find(day => day.SelectedDate === specificDate ).SessionTotalActualHoursWork\r",
							"    pm.expect(SessionTotalActualHoursWork,`Expected working hours for employee to be ${expectedSessionTotalActualHoursWork}, but got ${SessionTotalActualHoursWork}`).to.eql(expectedSessionTotalActualHoursWork);\r",
							"});\r",
							"\r",
							"//العمل الإضافي\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate over time working hours for employee with specific ID is correct\", function () {\r",
							"    const expectedSessionTotalOverTimeHours = pm.iterationData.get(\"SessionTotalOverTimeHours\")\r",
							"    const actualSessionTotalOverTimeHours = workTransactions.find(day => day.SelectedDate === specificDate ).SessionTotalOverTimeHours;\r",
							"    pm.expect(actualSessionTotalOverTimeHours,`Expected over time working hours for employee to be ${expectedSessionTotalOverTimeHours}, but got ${actualSessionTotalOverTimeHours}`).to.eql(expectedSessionTotalOverTimeHours);\r",
							"});\r",
							"\r",
							"//حضور مبكر\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate early attendance for employee with specific ID is correct\", function () {\r",
							"    const expectedSessionTotalCheckInExtraHours = pm.iterationData.get(\"SessionTotalCheckInExtraHours\")\r",
							"    const actualSessionTotalCheckInExtraHours = workTransactions.find(day => day.SelectedDate === specificDate ).SessionTotalCheckInExtraHours\r",
							"    pm.expect(actualSessionTotalCheckInExtraHours,`Expected early attendanc for employee to be ${expectedSessionTotalCheckInExtraHours}, but got ${actualSessionTotalCheckInExtraHours}`).to.eql(expectedSessionTotalCheckInExtraHours);\r",
							"});\r",
							"\r",
							"//مجموع ساعات الدوام الفعلي\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total working hours for employee with specific job number is correct\", function () {\r",
							"    const expectedTotalHoursWorkDuringInterval = pm.iterationData.get(\"TotalHoursWorkDuringInterval\");\r",
							"    const actualTotalHoursWorkDuringInterval =  specificEmployee.TotalHoursWorkDuringInterval\r",
							"    pm.expect(actualTotalHoursWorkDuringInterval,`Expected working hours for employee to be ${expectedTotalHoursWorkDuringInterval}, but got ${actualTotalHoursWorkDuringInterval}`).to.eql(expectedTotalHoursWorkDuringInterval);\r",
							"    });\r",
							"\r",
							"//النقص في الدوام\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Shortes hours for employee with specific ID is correct\", function () {\r",
							"    const expectedSessionTotalShortesHours = pm.iterationData.get(\"SessionTotalShortesHours\")\r",
							"    const actualSessionTotalShortesHours = workTransactions.find(day => day.SelectedDate === specificDate ).SessionTotalShortesHours\r",
							"    pm.expect(actualSessionTotalShortesHours,`Expected shortes working hours for employee to be ${expectedSessionTotalShortesHours}, but got ${actualSessionTotalShortesHours}`).to.eql(expectedSessionTotalShortesHours);\r",
							"});\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total Hours Over Time During Interval for employee with specific job number is correct\", function () {\r",
							"    const expectedTotalHoursOverTimeHoursDuringInterval = pm.iterationData.get(\"TotalHoursOverTimeHoursDuringInterval\");\r",
							"    const actualTotalHoursOverTimeHoursDuringInterval = specificEmployee.TotalHoursOverTimeHoursDuringInterval\r",
							"    pm.expect(actualTotalHoursOverTimeHoursDuringInterval,`Expected total hours overTime during interval for employee to be ${expectedTotalHoursOverTimeHoursDuringInterval}, but got ${actualTotalHoursOverTimeHoursDuringInterval}`).to.eql(expectedTotalHoursOverTimeHoursDuringInterval);\r",
							"    });\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total CheckIn Extra Hours During Interval for employee with specific job number is correct\", function () {\r",
							"    const expectedTotalCheckInExtraHoursDuringInterval = pm.iterationData.get(\"TotalCheckInExtraHoursDuringInterval\");\r",
							"    const actualTotalCheckInExtraHoursDuringInterval = specificEmployee.TotalCheckInExtraHoursDuringInterval\r",
							"    pm.expect(actualTotalCheckInExtraHoursDuringInterval,`Expected total checkin extra hours during interval for employee to be ${expectedTotalCheckInExtraHoursDuringInterval}, but got ${actualTotalCheckInExtraHoursDuringInterval}`).to.eql(expectedTotalCheckInExtraHoursDuringInterval);\r",
							"    });\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total CheckOut Late Hours During Interval for employee with specific job number is correct\", function () {\r",
							"    const expectedTotalCheckOutLateHoursDuringInterval = pm.iterationData.get(\"TotalCheckOutLateHoursDuringInterval\");\r",
							"    const actualTotalCheckOutLateHoursDuringInterval = specificEmployee.TotalCheckOutLateHoursDuringInterval\r",
							"    pm.expect(actualTotalCheckOutLateHoursDuringInterval,`Expected total checkout late hours during interval for employee to be ${expectedTotalCheckOutLateHoursDuringInterval}, but got ${actualTotalCheckOutLateHoursDuringInterval}`).to.eql(expectedTotalCheckOutLateHoursDuringInterval);\r",
							"    });\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total Plan Work Hour During Interval for employee with specific job number is correct\", function () {\r",
							"    const expectedTotalPlanWorkHourDuringInterval = pm.iterationData.get(\"TotalPlanWorkHourDuringInterval\");\r",
							"    const actualTotalPlanWorkHourDuringInterval = specificEmployee.TotalPlanWorkHourDuringInterval\r",
							"    pm.expect(actualTotalPlanWorkHourDuringInterval,`Expected total plan work during interval for employee to be ${expectedTotalPlanWorkHourDuringInterval}, but got ${actualTotalPlanWorkHourDuringInterval}`).to.eql(expectedTotalPlanWorkHourDuringInterval);\r",
							"    });\r",
							"    \r",
							"    pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total Leaves Minutes During Interval for employee with specific job number is correct\", function () {\r",
							"        const expectedTotalLeavesMinutesDuringInterval = pm.iterationData.get(\"TotalLeavesMinutesDuringInterval\");\r",
							"        const actualTotalLeavesMinutesDuringInterval = specificEmployee.TotalLeavesMinutesDuringInterval\r",
							"        pm.expect(actualTotalLeavesMinutesDuringInterval,`Expected total leaves minutes during interval for employee to be ${expectedTotalLeavesMinutesDuringInterval}, but got ${actualTotalLeavesMinutesDuringInterval}`).to.eql(expectedTotalLeavesMinutesDuringInterval);\r",
							"    });\r",
							"\r",
							"     pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate Total CheckIn Late Hours During Interval for employee with specific job number is correct\", function () {\r",
							"        const expectedTotalCheckInLateHoursDuringInterval = pm.iterationData.get(\"TotalCheckInLateHoursDuringInterval\");\r",
							"        const actualTotalCheckInLateHoursDuringInterval = specificEmployee.TotalCheckInLateHoursDuringInterval\r",
							"        pm.expect(actualTotalCheckInLateHoursDuringInterval,`Expected total checkin late hours during interval for employee to be ${expectedTotalCheckInLateHoursDuringInterval}, but got ${actualTotalCheckInLateHoursDuringInterval}`).to.eql(expectedTotalCheckInLateHoursDuringInterval);\r",
							"    });\r",
							"\r",
							"pm.test(collectionName + \"/\" + folderName +\"/\"+TestCaseId+\"/\"+TCdate+\":  Validate total retrived user is correct\", function () {\r",
							"    const expectedTotalEmpRetrived = pm.collectionVariables.get(\"totalCount\")\r",
							"    const actualTotalEmpRetrived = jsonData.Data.TotalCount\r",
							"    pm.expect(actualTotalEmpRetrived,`Expected total retrived user for employee to be ${expectedTotalEmpRetrived}, but got ${actualTotalEmpRetrived}`).to.eql(expectedTotalEmpRetrived);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "accept-language",
						"value": "en-GB,en;q=0.9,ar-EG;q=0.8,ar;q=0.7,en-US;q=0.6"
					},
					{
						"key": "authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIwMWMyOWJjYi04MDRhLTRhNmMtOTZmYi0zMDJmOTE1YjViYmIiLCJ1bmlxdWVfbmFtZSI6IjAxYzI5YmNiLTgwNGEtNGE2Yy05NmZiLTMwMmY5MTViNWJiYiIsIlVzZXJJZCI6IjAxYzI5YmNiLTgwNGEtNGE2Yy05NmZiLTMwMmY5MTViNWJiYiIsIlVzZXJTdGF0ZXNJRCI6IjEiLCJBY2NvdW50SWQiOiI5OTNhOWFkMy1jYWNjLTRkZGMtOTk3OC01NTNmNjY1NzA3MTQiLCJVc2VybmFtZSI6Im0ubW9uZ2VkQHQyLnNhIiwiVXNlckFjY291bnRJZCI6Ijk5M2E5YWQzLWNhY2MtNGRkYy05OTc4LTU1M2Y2NjU3MDcxNCIsIlBhc3N3b3JkIjoid2JcXDQyb19gTSIsIm5iZiI6MTczNDQxNDI2OCwiZXhwIjoxNzM0NDIxNDY4LCJpYXQiOjE3MzQ0MTQyNjh9.7u7CX3MpIzdReDvKi0fMkDP_fi0GDX2_PhjU7QKpRio"
					},
					{
						"key": "clientkey",
						"value": "Availo"
					},
					{
						"key": "content-type",
						"value": "application/json"
					},
					{
						"key": "language",
						"value": "0"
					},
					{
						"key": "origin",
						"value": "https://availo-testingnewui.t2.sa"
					},
					{
						"key": "priority",
						"value": "u=1, i"
					},
					{
						"key": "referer",
						"value": "https://availo-testingnewui.t2.sa/"
					},
					{
						"key": "requestversion",
						"value": "v 4.9.5"
					},
					{
						"key": "requstid",
						"value": ":42878783759329732"
					},
					{
						"key": "requsttoken",
						"value": ""
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Windows\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "servicekey",
						"value": "aa55a21aae70be27b84cdef2413f519c"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
					},
					{
						"key": "userid",
						"value": "01c29bcb-804a-4a6c-96fb-302f915b5bbb"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Data\": {\n    \"FromDate\": \"{{ReportFrom}}\",\n    \"ToDate\": \"{{ReportTo}}\",\n    \"UserId\": \"00000000-0000-0000-0000-000000000000\",\n    \"UserIds\": [],\n    \"DepartmentId\": \"00000000-0000-0000-0000-000000000000\",\n    \"DepartmentsIDs\": {{DepartmentID}},\n    \"DisplayType\": 1,\n    \"UserStatusId\": 1,\n    \"GatesGroup\": [],\n    \"EmployeeType\": \"\"\n  },\n  \"UserID\": \"\",\n  \"PageNumber\": 1,\n  \"PageSize\": 30,\n  \"Language\": 1,\n  \"TimeZoneOffset\": -120\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Reports/GetWorkReportByInterval",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Reports",
						"GetWorkReportByInterval"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "totalCount",
			"value": ""
		}
	]
}